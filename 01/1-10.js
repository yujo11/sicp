/**
 * 1-10-1.
 * 다음 함수는 애커만 함수(Ackermann's function)이라고 부르는 수학 함수를 계산한다.
 *
 * function A(x, y) {
 *   return y === 0
 *          ? 0
 *          : x === 0
 *          ? 2 * y
 *          : y === 1
 *          ? 2
 *          : A(x - 1, A(x, y - 1));
 * }
 *
 * 다음 문장들은 각각 어떤 값으로 평가되는가?
 * A(1, 10)
 * A(2, 4)
 * A(3, 3)
 */

/**
 * 1. A(1, 10)
 * => A(1, 10) => A(0, A(1, 9)) => A(0, A(0, A(1, 8))) => A(0, A(0, A(0, A(1, 7)))) => A(0, A(0, A(0, A(0, A(1, 6))))) ...
 *
 * 2. A(2, 4)
 * => A(2, 4) => A(1, A(2, 3)) => A(1, A(1, A(2, 2))) ...
 *
 * 3. A(3, 3)
 * => A(2, A(3, 2)) => A(2, A(2, (A, 3, 1))) ...
 */

/**
 * 1-10-2.
 * 위의 함수 A를 이용해서 선언된 다음 함수들이 있다.
 * function f(n) {
 *   return A(0, n);
 * }
 *
 * function g(n) {
 *   return A(1, n);
 * }
 *
 * function h(n) {
 *   return A(2, n);
 * }
 *
 * function k(n) {
 *   return 5 * n * n;
 * }
 *
 * 양의 정수 n에 대해 함수 f,g,h 가 계산하는 함수를 각각 간결한 수식으로 표현하라. 예를 들어 k(n)은 5n^2를 계산한다.
 *
 */

/**
 *
 * f(n) = 2n
 *
 * g(n) = 2^n
 *
 * h(n) = 2^(2^(2^(...2))) (n개의 2를 지수로 갖는다.)
 *
 * k(n) = 5n^2
 */
